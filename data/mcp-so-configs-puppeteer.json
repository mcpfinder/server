[
  {
    "name": "weather-service MCP server@duan-liClaude Model Context Protocol Weather Server Example",
    "url": "https://mcp.so/server/mcp-weather-server-example/duan-li",
    "extractedAt": "2025-06-20T20:57:14.708Z",
    "slug": "mcp-weather-server-example",
    "authorFromUrl": "duan-li",
    "config": {
      "mcpServers": {
        "server": {
          "command": "npx",
          "args": [
            "@modelcontextprotocol/inspector"
          ]
        }
      }
    },
    "configUrl": "https://mcp.so/server/mcp-weather-server-example/duan-li?tab=content"
  },
  {
    "name": "awesome-awesome-mcp-servers@esc5221A curated list of awesome-mcp-servers (Model Context Protocol server)",
    "url": "https://mcp.so/server/awesome-awesome-mcp-servers/esc5221",
    "extractedAt": "2025-06-20T20:57:15.575Z",
    "slug": "awesome-awesome-mcp-servers",
    "authorFromUrl": "esc5221",
    "config": {
      "mcpServers": {
        "server": {
          "command": "uvx",
          "args": [
            "voice-mode"
          ]
        }
      }
    },
    "configUrl": "https://mcp.so/server/awesome-awesome-mcp-servers/esc5221?tab=content"
  },
  {
    "name": "MCP Documentation Server@mahawi1992MCP Documentation Server with AI Learning Capabilities",
    "url": "https://mcp.so/server/mcp-documentation-server/mahawi1992",
    "extractedAt": "2025-06-20T20:57:14.241Z",
    "slug": "mcp-documentation-server",
    "authorFromUrl": "mahawi1992",
    "config": {
      "mcpServers": {
        "documentation": {
          "command": "npx",
          "args": [
            "-y",
            "mcp-documentation-server"
          ],
          "env": {
            "BRAVE_API_KEY": "<YOUR_BRAVE_API_KEY>"
          }
        }
      }
    },
    "configUrl": "https://mcp.so/server/mcp-documentation-server/mahawi1992?tab=content"
  },
  {
    "name": "Shell MCP Server@odysseus0",
    "url": "https://mcp.so/server/mcp-server-shell/odysseus0",
    "extractedAt": "2025-06-20T20:57:11.997Z",
    "slug": "mcp-server-shell",
    "authorFromUrl": "odysseus0",
    "config": {
      "mcpServers": {
        "server": {
          "command": "npx",
          "args": [
            "@modelcontextprotocol/inspector"
          ]
        }
      }
    },
    "configUrl": "https://mcp.so/server/mcp-server-shell/odysseus0?tab=content"
  },
  {
    "name": "scaflog-zoho-mcp-server MCP server@mastercode-ioMCP Server for Scaflog Zoho Creator App",
    "url": "https://mcp.so/server/scaflog-zoho-mcp-server/mastercode-io",
    "extractedAt": "2025-06-20T20:57:14.122Z",
    "slug": "scaflog-zoho-mcp-server",
    "authorFromUrl": "mastercode-io",
    "config": {
      "mcpServers": {
        "server": {
          "command": "npx",
          "args": [
            "@modelcontextprotocol/inspector"
          ]
        }
      }
    },
    "configUrl": "https://mcp.so/server/scaflog-zoho-mcp-server/mastercode-io?tab=content"
  },
  {
    "name": "Angle One MCP Server@baba786An MCP (Model Context Protocol) server implementation integrated with Angle One APIs for financial data processing and analysis.",
    "url": "https://mcp.so/server/angleone-mcp-server/baba786",
    "extractedAt": "2025-06-20T20:57:22.721Z",
    "slug": "angleone-mcp-server",
    "authorFromUrl": "baba786",
    "config": {
      "mcpServers": {
        "server": {
          "command": "uvx",
          "args": [
            "voice-mode"
          ]
        }
      }
    },
    "configUrl": "https://mcp.so/server/angleone-mcp-server/baba786?tab=content"
  },
  {
    "name": "isolated-commands-mcp-server MCP Server@mikegehard",
    "url": "https://mcp.so/server/isolated-commands-mcp-server/mikegehard",
    "extractedAt": "2025-06-20T20:57:24.873Z",
    "slug": "isolated-commands-mcp-server",
    "authorFromUrl": "mikegehard",
    "config": {
      "mcpServers": {
        "isolated-commands-mcp-server": {
          "command": "/path/to/isolated-commands-mcp-server/build/index.js"
        }
      }
    },
    "configUrl": "https://mcp.so/server/isolated-commands-mcp-server/mikegehard?tab=content"
  },
  {
    "name": "Contentful MCP Server@ivo-tobyMCP (Model Context Protocol) server for the Contentful Management API",
    "url": "https://mcp.so/server/contentful-mcp/ivo-toby",
    "extractedAt": "2025-06-20T20:57:25.969Z",
    "slug": "contentful-mcp",
    "authorFromUrl": "ivo-toby",
    "config": {
      "mcpServers": {
        "contentful": {
          "command": "npx",
          "args": [
            "-y",
            "@ivotoby/contentful-management-mcp-server"
          ],
          "env": {
            "CONTENTFUL_MANAGEMENT_ACCESS_TOKEN": "<Your CMA token>"
          }
        }
      }
    },
    "configUrl": "https://mcp.so/server/contentful-mcp/ivo-toby?tab=content"
  },
  {
    "name": "MCP Server Replicate@gerred",
    "url": "https://mcp.so/server/mcp-server-replicate/gerred",
    "extractedAt": "2025-06-20T20:57:22.470Z",
    "slug": "mcp-server-replicate",
    "authorFromUrl": "gerred",
    "config": {
      "globalShortcut": "Shift+Alt+A",
      "mcpServers": {
        "replicate": {
          "command": "uv",
          "args": [
            "tool",
            "run",
            "mcp-server-replicate"
          ],
          "env": {
            "REPLICATE_API_TOKEN": "APITOKEN"
          },
          "cwd": "$PATH_TO_REPO"
        }
      }
    },
    "configUrl": "https://mcp.so/server/mcp-server-replicate/gerred?tab=content"
  },
  {
    "name": "LibSQL Model Context Protocol Server@nicholasqModel Context Protocol server for libsql",
    "url": "https://mcp.so/server/mcp-server-libsql/nicholasq",
    "extractedAt": "2025-06-20T20:57:34.273Z",
    "slug": "mcp-server-libsql",
    "authorFromUrl": "nicholasq",
    "config": {
      "mcpServers": {
        "server": {
          "command": "uvx",
          "args": [
            "voice-mode"
          ]
        }
      }
    },
    "configUrl": "https://mcp.so/server/mcp-server-libsql/nicholasq?tab=content"
  },
  {
    "name": "Java-MCPlugin-ChallengeServerBungeePlugin@NikogeniaThe Java Minecraft Plugin (BungeeCord) for the Challenge Server.",
    "url": "https://mcp.so/server/Java-MCPlugin-ChallengeServerBungeePlugin/Nikogenia",
    "extractedAt": "2025-06-20T20:57:33.881Z",
    "slug": "Java-MCPlugin-ChallengeServerBungeePlugin",
    "authorFromUrl": "Nikogenia",
    "config": {
      "mcpServers": {
        "server": {
          "command": "uvx",
          "args": [
            "voice-mode"
          ]
        }
      }
    },
    "configUrl": "https://mcp.so/server/Java-MCPlugin-ChallengeServerBungeePlugin/Nikogenia?tab=content"
  },
  {
    "name": "OpenAPI MCP Server@ivo-tobyMCP Server (Model Context Protocol) for turning OpenAPI specifications into a MCP Resource",
    "url": "https://mcp.so/server/mcp-openapi-server/ivo-toby",
    "extractedAt": "2025-06-20T20:57:34.167Z",
    "slug": "mcp-openapi-server",
    "authorFromUrl": "ivo-toby",
    "config": {
      "mcpServers": {
        "openapi": {
          "command": "npx",
          "args": [
            "-y",
            "@ivotoby/openapi-mcp-server"
          ],
          "env": {
            "API_BASE_URL": "https://api.example.com",
            "OPENAPI_SPEC_PATH": "https://api.example.com/openapi.json",
            "API_HEADERS": "Authorization:Bearer token123,X-API-Key:your-api-key"
          }
        }
      }
    },
    "configUrl": "https://mcp.so/server/mcp-openapi-server/ivo-toby?tab=content"
  },
  {
    "name": "mcp-server-bluesky@morinokamiMCP server for interacting with Bluesky",
    "url": "https://mcp.so/server/mcp-server-bluesky/morinokami",
    "extractedAt": "2025-06-20T20:57:32.931Z",
    "slug": "mcp-server-bluesky",
    "authorFromUrl": "morinokami",
    "config": {
      "mcpServers": {
        "bluesky": {
          "command": "npx",
          "args": [
            "-y",
            "mcp-server-bluesky"
          ],
          "env": {
            "BLUESKY_USERNAME": "username",
            "BLUESKY_PASSWORD": "password",
            "BLUESKY_PDS_URL": "https://bsky.social"
          }
        }
      }
    },
    "configUrl": "https://mcp.so/server/mcp-server-bluesky/morinokami?tab=content"
  },
  {
    "name": "@orbit-logistics/notion-mcp-server@orbit-logisticsMCP server for Notion integration",
    "url": "https://mcp.so/server/notion-mcp-server/orbit-logistics",
    "extractedAt": "2025-06-20T20:57:34.701Z",
    "slug": "notion-mcp-server",
    "authorFromUrl": "orbit-logistics",
    "config": {
      "mcpServers": {
        "notion": {
          "command": "npx",
          "args": [
            "-y",
            "mcp-sequential-thinking-test",
            "-t",
            "<notion_integration_token>"
          ]
        }
      }
    },
    "configUrl": "https://mcp.so/server/notion-mcp-server/orbit-logistics?tab=content"
  },
  {
    "name": "My first MCP server@yusukebe",
    "url": "https://mcp.so/server/my-first-mcp-server/yusukebe",
    "extractedAt": "2025-06-20T20:57:42.820Z",
    "slug": "my-first-mcp-server",
    "authorFromUrl": "yusukebe",
    "config": {
      "mcpServers": {
        "game": {
          "command": "node",
          "args": [
            "/path-to/build/index.js"
          ]
        }
      }
    },
    "configUrl": "https://mcp.so/server/my-first-mcp-server/yusukebe?tab=content"
  },
  {
    "name": "WCGW@rusiaamanSend code snippet and paths to Claude. Designed to work with wcgw mcp server.",
    "url": "https://mcp.so/server/wcgw-vscode/rusiaaman",
    "extractedAt": "2025-06-20T20:57:42.880Z",
    "slug": "wcgw-vscode",
    "authorFromUrl": "rusiaaman",
    "config": {
      "mcpServers": {
        "server": {
          "command": "uvx",
          "args": [
            "voice-mode"
          ]
        }
      }
    },
    "configUrl": "https://mcp.so/server/wcgw-vscode/rusiaaman?tab=content"
  },
  {
    "name": "mcp-server-llmling@phil65MCP (Model context protocol) server with LLMling backend",
    "url": "https://mcp.so/server/mcp-server-llmling/phil65",
    "extractedAt": "2025-06-20T20:57:42.232Z",
    "slug": "mcp-server-llmling",
    "authorFromUrl": "phil65",
    "config": {
      "mcpServers": {
        "llmling": {
          "command": "uvx",
          "args": [
            "mcp-server-llmling",
            "start",
            "path/to/your/config.yml"
          ],
          "env": {}
        }
      }
    },
    "configUrl": "https://mcp.so/server/mcp-server-llmling/phil65?tab=content"
  },
  {
    "name": "MCP_server_weather@mathemagie",
    "url": "https://mcp.so/server/MCP_server_weather/mathemagie",
    "extractedAt": "2025-06-20T20:57:42.534Z",
    "slug": "MCP_server_weather",
    "authorFromUrl": "mathemagie",
    "config": {
      "mcpServers": {
        "server": {
          "command": "uvx",
          "args": [
            "voice-mode"
          ]
        }
      }
    },
    "configUrl": "https://mcp.so/server/MCP_server_weather/mathemagie?tab=content"
  },
  {
    "name": "convex-mcp-server MCP Server@handfuloflight",
    "url": "https://mcp.so/server/convex-mcp-server/handfuloflight",
    "extractedAt": "2025-06-20T20:57:43.419Z",
    "slug": "convex-mcp-server",
    "authorFromUrl": "handfuloflight",
    "config": {
      "mcpServers": {
        "convex-mcp-server": {
          "command": "/path/to/convex-mcp-server/build/index.js"
        }
      }
    },
    "configUrl": "https://mcp.so/server/convex-mcp-server/handfuloflight?tab=content"
  },
  {
    "name": "Illustrator MCP Server@spencerhhubertmcp server to run scripts on adobe illustrator",
    "url": "https://mcp.so/server/illustrator-mcp-server/spencerhhubert",
    "extractedAt": "2025-06-20T20:57:51.273Z",
    "slug": "illustrator-mcp-server",
    "authorFromUrl": "spencerhhubert",
    "config": {
      "mcpServers": {
        "illustrator": {
          "command": "uv",
          "args": [
            "--directory",
            "/Users/you/code/mcp/illustrator-mcp-server",
            "run",
            "illustrator"
          ]
        }
      }
    },
    "configUrl": "https://mcp.so/server/illustrator-mcp-server/spencerhhubert?tab=content"
  },
  {
    "name": "SmallCloud MCP Server Demo@SmallCloudCoSmallCloud MCP Server Demonstration of an Anthropic MCP server using the Model Context Protocol SDK by Anthropic. For use with Claude Desktop and other MCP Hosts.",
    "url": "https://mcp.so/server/smallcloud-mcp-server/SmallCloudCo",
    "extractedAt": "2025-06-20T20:57:51.939Z",
    "slug": "smallcloud-mcp-server",
    "authorFromUrl": "SmallCloudCo",
    "config": {
      "mcpServers": {
        "smallcloud-mcp-server": {
          "command": "/opt/homebrew/bin/node",
          "args": [
            "~/Git/smallcloud-mcp-server/index.js"
          ]
        }
      }
    },
    "configUrl": "https://mcp.so/server/smallcloud-mcp-server/SmallCloudCo?tab=content"
  },
  {
    "name": "Quarkus Model Context Protocol (MCP) Server@quarkiverseThis extension enables developers to implement the MCP server features easily.",
    "url": "https://mcp.so/server/quarkus-mcp-server/quarkiverse",
    "extractedAt": "2025-06-20T20:57:51.663Z",
    "slug": "quarkus-mcp-server",
    "authorFromUrl": "quarkiverse",
    "config": {
      "mcpServers": {
        "server": {
          "command": "uvx",
          "args": [
            "voice-mode"
          ]
        }
      }
    },
    "configUrl": "https://mcp.so/server/quarkus-mcp-server/quarkiverse?tab=content"
  },
  {
    "name": "Tavily MCP Server@RamXXAn MCP server for Tavily's search API",
    "url": "https://mcp.so/server/mcp-tavily/RamXX",
    "extractedAt": "2025-06-20T20:57:50.691Z",
    "slug": "mcp-tavily",
    "authorFromUrl": "RamXX",
    "config": {
      "mcpServers": {
        "server": {
          "command": "npx",
          "args": [
            "npx"
          ]
        }
      }
    },
    "configUrl": "https://mcp.so/server/mcp-tavily/RamXX?tab=content"
  },
  {
    "name": "MCP Financial Advisor@dgormlyA Model Context Protocol (MCP) server for financial advisory and bookkeeping, providing structured financial data and context for AI agents.",
    "url": "https://mcp.so/server/mcp-financial-advisor/dgormly",
    "extractedAt": "2025-06-20T20:57:50.887Z",
    "slug": "mcp-financial-advisor",
    "authorFromUrl": "dgormly",
    "config": {
      "mcpServers": {
        "server": {
          "command": "uvx",
          "args": [
            "voice-mode"
          ]
        }
      }
    },
    "configUrl": "https://mcp.so/server/mcp-financial-advisor/dgormly?tab=content"
  },
  {
    "name": "BOLD MCP Server@LespernaterMCP Server to connect local LLMs to BOLD Rest API",
    "url": "https://mcp.so/server/mcp-server-bold/Lespernater",
    "extractedAt": "2025-06-20T20:58:00.792Z",
    "slug": "mcp-server-bold",
    "authorFromUrl": "Lespernater",
    "config": {
      "mcpServers": {
        "server": {
          "command": "npx",
          "args": [
            "@modelcontextprotocol/inspector"
          ]
        }
      }
    },
    "configUrl": "https://mcp.so/server/mcp-server-bold/Lespernater?tab=content"
  },
  {
    "name": "duckduckgo-web-search MCP Server@Sunwood-ai-labsDuckDuckGo Web Search MCP Server - A simple web search implementation for Claude Desktop using DuckDuckGo API",
    "url": "https://mcp.so/server/duckduckgo-web-search/Sunwood-ai-labs",
    "extractedAt": "2025-06-20T20:57:59.534Z",
    "slug": "duckduckgo-web-search",
    "authorFromUrl": "Sunwood-ai-labs",
    "config": {
      "mcpServers": {
        "duckduckgo-web-search": {
          "command": "/path/to/duckduckgo-web-search/build/index.js"
        }
      }
    },
    "configUrl": "https://mcp.so/server/duckduckgo-web-search/Sunwood-ai-labs?tab=content"
  },
  {
    "name": "MCP Google Calendar Server@markelaugust74A Model Context Protocol (MCP) server implementation for Google Calendar integration. Create and manage calendar events directly through Claude or other AI assistants.",
    "url": "https://mcp.so/server/mcp-google-calendar/markelaugust74",
    "extractedAt": "2025-06-20T20:57:59.777Z",
    "slug": "mcp-google-calendar",
    "authorFromUrl": "markelaugust74",
    "config": {
      "mcpServers": {
        "server": {
          "command": "uvx",
          "args": [
            "voice-mode"
          ]
        }
      }
    },
    "configUrl": "https://mcp.so/server/mcp-google-calendar/markelaugust74?tab=content"
  },
  {
    "name": "MCPE_servers@StrongApps",
    "url": "https://mcp.so/server/MCPE_servers/StrongApps",
    "extractedAt": "2025-06-20T20:58:00.245Z",
    "slug": "MCPE_servers",
    "authorFromUrl": "StrongApps",
    "config": {
      "mcpServers": {
        "server": {
          "command": "uvx",
          "args": [
            "voice-mode"
          ]
        }
      }
    },
    "configUrl": "https://mcp.so/server/MCPE_servers/StrongApps?tab=content"
  },
  {
    "name": "MCP Server-Client Example@joeBlockchain",
    "url": "https://mcp.so/server/mcp-server-client/joeBlockchain",
    "extractedAt": "2025-06-20T20:58:10.004Z",
    "slug": "mcp-server-client",
    "authorFromUrl": "joeBlockchain",
    "config": {
      "mcpServers": {
        "server": {
          "command": "uvx",
          "args": [
            "voice-mode"
          ]
        }
      }
    },
    "configUrl": "https://mcp.so/server/mcp-server-client/joeBlockchain?tab=content"
  },
  {
    "name": "SingleStore MCP Server@madhukarkumarSingleStore MCP server implemented in TS",
    "url": "https://mcp.so/server/singlestore-mcp-server/madhukarkumar",
    "extractedAt": "2025-06-20T20:58:10.871Z",
    "slug": "singlestore-mcp-server",
    "authorFromUrl": "madhukarkumar",
    "config": {
      "mcpServers": {
        "singlestore": {
          "command": "node",
          "args": [
            "path/to/mcp-server-singlestore/build/index.js"
          ],
          "env": {
            "SINGLESTORE_HOST": "your-host.singlestore.com",
            "SINGLESTORE_PORT": "3306",
            "SINGLESTORE_USER": "your-username",
            "SINGLESTORE_PASSWORD": "your-password",
            "SINGLESTORE_DATABASE": "your-database",
            "SSE_ENABLED": "true",
            "SSE_PORT": "3333"
          }
        }
      }
    },
    "configUrl": "https://mcp.so/server/singlestore-mcp-server/madhukarkumar?tab=content"
  },
  {
    "name": "MCP Development Server@dillip285",
    "url": "https://mcp.so/server/mcp-dev-server/dillip285",
    "extractedAt": "2025-06-20T20:58:09.871Z",
    "slug": "mcp-dev-server",
    "authorFromUrl": "dillip285",
    "config": {
      "mcpServers": {
        "dev": {
          "command": "mcp-dev-server",
          "args": []
        }
      }
    },
    "configUrl": "https://mcp.so/server/mcp-dev-server/dillip285?tab=content"
  },
  {
    "name": "MCP GitHub Repository Server@loglmhqMCP server for interacting with a github repo",
    "url": "https://mcp.so/server/mcp-server-github-repo/loglmhq",
    "extractedAt": "2025-06-20T20:58:09.187Z",
    "slug": "mcp-server-github-repo",
    "authorFromUrl": "loglmhq",
    "config": {
      "mcpServers": {
        "mcp-server-github-repo": {
          "command": "/path/to/mcp-server-github-repo/build/index.js"
        }
      }
    },
    "configUrl": "https://mcp.so/server/mcp-server-github-repo/loglmhq?tab=content"
  },
  {
    "name": "MCP Rust CLI server template@TeamDmanA hello-world server for the Model Context Protocol",
    "url": "https://mcp.so/server/mcp-server-hello/TeamDman",
    "extractedAt": "2025-06-20T20:58:09.003Z",
    "slug": "mcp-server-hello",
    "authorFromUrl": "TeamDman",
    "config": {
      "mcpServers": {
        "current-time": {
          "command": "mcp-rs-template",
          "args": [
            "--mcp"
          ],
          "env": {
            "API_KEY": "xxxx"
          }
        }
      }
    },
    "configUrl": "https://mcp.so/server/mcp-server-hello/TeamDman?tab=content"
  },
  {
    "name": "MCP Substack Server@michalnaka🤖 MCP Server for Substack integration with Claude AI Desktop. Download and parse Substack posts directly in your Claude conversations.",
    "url": "https://mcp.so/server/mcp-substack/michalnaka",
    "extractedAt": "2025-06-20T20:58:19.725Z",
    "slug": "mcp-substack",
    "authorFromUrl": "michalnaka",
    "config": {
      "mcpServers": {
        "mcp-substack": {
          "command": "/opt/homebrew/bin/node",
          "args": [
            "/path/to/mcp-substack/lib/index.mjs"
          ],
          "methods": {
            "download_substack": {
              "description": "Download and parse content from a Substack post"
            }
          }
        }
      }
    },
    "configUrl": "https://mcp.so/server/mcp-substack/michalnaka?tab=content"
  },
  {
    "name": "test-server MCP server@jtorreggiani",
    "url": "https://mcp.so/server/test-python-mcp-server/jtorreggiani",
    "extractedAt": "2025-06-20T20:58:19.310Z",
    "slug": "test-python-mcp-server",
    "authorFromUrl": "jtorreggiani",
    "config": {
      "mcpServers": {
        "server": {
          "command": "npx",
          "args": [
            "@modelcontextprotocol/inspector"
          ]
        }
      }
    },
    "configUrl": "https://mcp.so/server/test-python-mcp-server/jtorreggiani?tab=content"
  },
  {
    "name": "MCP Server for Cursor@AntDX316",
    "url": "https://mcp.so/server/MCP-Server/AntDX316",
    "extractedAt": "2025-06-20T20:58:18.379Z",
    "slug": "MCP-Server",
    "authorFromUrl": "AntDX316",
    "config": {
      "mcpServers": {
        "server": {
          "command": "uvx",
          "args": [
            "voice-mode"
          ]
        }
      }
    },
    "configUrl": "https://mcp.so/server/MCP-Server/AntDX316?tab=content"
  },
  {
    "name": "mcPixelmonServer@Odranoel135",
    "url": "https://mcp.so/server/mcPixelmonServer/Odranoel135",
    "extractedAt": "2025-06-20T20:58:18.897Z",
    "slug": "mcPixelmonServer",
    "authorFromUrl": "Odranoel135",
    "config": {
      "mcpServers": {
        "server": {
          "command": "uvx",
          "args": [
            "voice-mode"
          ]
        }
      }
    },
    "configUrl": "https://mcp.so/server/mcPixelmonServer/Odranoel135?tab=content"
  },
  {
    "name": "alphaguts@amir16ypA minecraft alpha 1.2.6 server API using Retro MCP",
    "url": "https://mcp.so/server/alphaguts/amir16yp",
    "extractedAt": "2025-06-20T20:58:18.897Z",
    "slug": "alphaguts",
    "authorFromUrl": "amir16yp",
    "config": {
      "mcpServers": {
        "server": {
          "command": "uvx",
          "args": [
            "voice-mode"
          ]
        }
      }
    },
    "configUrl": "https://mcp.so/server/alphaguts/amir16yp?tab=content"
  },
  {
    "name": "mcp-cps-data MCP server@mdagostMCP Server for locally hosted data on Chicago Public Schools",
    "url": "https://mcp.so/server/mcp-cps-data/mdagost",
    "extractedAt": "2025-06-20T20:58:26.725Z",
    "slug": "mcp-cps-data",
    "authorFromUrl": "mdagost",
    "config": {
      "mcpServers": {
        "server": {
          "command": "npx",
          "args": [
            "@modelcontextprotocol/inspector"
          ]
        }
      }
    },
    "configUrl": "https://mcp.so/server/mcp-cps-data/mdagost?tab=content"
  },
  {
    "name": "MCP (Model Context Protocol) Research@spuerFanResearch and documentation about Model Context Protocol (MCP) servers and implementations",
    "url": "https://mcp.so/server/mcp-research/spuerFan",
    "extractedAt": "2025-06-20T20:58:27.931Z",
    "slug": "mcp-research",
    "authorFromUrl": "spuerFan",
    "config": {
      "mcpServers": {
        "server": {
          "command": "uvx",
          "args": [
            "voice-mode"
          ]
        }
      }
    },
    "configUrl": "https://mcp.so/server/mcp-research/spuerFan?tab=content"
  },
  {
    "name": "cmd-line-executor MCP server@MarkusPfundsteinExperimental MCP server to execute command line commands",
    "url": "https://mcp.so/server/cmd-line-executor-MCP/MarkusPfundstein",
    "extractedAt": "2025-06-20T20:58:27.695Z",
    "slug": "cmd-line-executor-MCP",
    "authorFromUrl": "MarkusPfundstein",
    "config": {
      "mcpServers": {
        "server": {
          "command": "npx",
          "args": [
            "@modelcontextprotocol/inspector"
          ]
        }
      }
    },
    "configUrl": "https://mcp.so/server/cmd-line-executor-MCP/MarkusPfundstein?tab=content"
  },
  {
    "name": "mcp-datetime@ZeparHyfarA MCP server for datetime formatting and file name generation.",
    "url": "https://mcp.so/server/mcp-datetime/ZeparHyfar",
    "extractedAt": "2025-06-20T20:58:26.582Z",
    "slug": "mcp-datetime",
    "authorFromUrl": "ZeparHyfar",
    "config": {
      "mcpServers": {
        "mcp-datetime": {
          "command": "uvx",
          "args": [
            "mcp-datetime"
          ]
        }
      }
    },
    "configUrl": "https://mcp.so/server/mcp-datetime/ZeparHyfar?tab=content"
  },
  {
    "name": "@f4ww4z/mcp-mysql-server@f4ww4zA Model Context Protocol server for MySQL database operations",
    "url": "https://mcp.so/server/mcp-mysql-server/f4ww4z",
    "extractedAt": "2025-06-20T20:58:26.504Z",
    "slug": "mcp-mysql-server",
    "authorFromUrl": "f4ww4z",
    "config": {
      "mcpServers": {
        "mysql": {
          "command": "npx",
          "args": [
            "-y",
            "@f4ww4z/mcp-mysql-server"
          ],
          "env": {
            "MYSQL_HOST": "your_host",
            "MYSQL_USER": "your_user",
            "MYSQL_PASSWORD": "your_password",
            "MYSQL_DATABASE": "your_database"
          }
        }
      }
    },
    "configUrl": "https://mcp.so/server/mcp-mysql-server/f4ww4z?tab=content"
  },
  {
    "name": "mcp-server-emojikey@identimojiMCP Server for emojikey.io ... save your unique relationship state and interaction style with your favorite LLM",
    "url": "https://mcp.so/server/mcp-server-emojikey/identimoji",
    "extractedAt": "2025-06-20T20:58:36.154Z",
    "slug": "mcp-server-emojikey",
    "authorFromUrl": "identimoji",
    "config": {
      "mcpServers": {
        "emojikey": {
          "command": "npx",
          "args": [
            "@identimoji/mcp-server-emojikey"
          ],
          "env": {
            "EMOJIKEYIO_API_KEY": "your-api-key-from-emojikey.io",
            "MODEL_ID": "Claude-3-5-Sonnet-20241022"
          }
        }
      }
    },
    "configUrl": "https://mcp.so/server/mcp-server-emojikey/identimoji?tab=content"
  },
  {
    "name": "vigilant-adventure@chuckmenhey,i wanted to play with some mods but when i try to open the game it says; The game crashed whilst initializing game Error: java.lang.NoClassDefFoundError: cpw/mods/fml/common/IPlayerTracker Exit Code: -1 what can i do to make it work?the log is; ---- Minecraft Crash Report ---- WARNING: coremods are present: MekanismCoremod (Mekanism-1.12.2-9…",
    "url": "https://mcp.so/server/vigilant-adventure/chuckmen",
    "extractedAt": "2025-06-20T20:58:36.309Z",
    "slug": "vigilant-adventure",
    "authorFromUrl": "chuckmen",
    "config": {
      "mcpServers": {
        "server": {
          "command": "uvx",
          "args": [
            "voice-mode"
          ]
        }
      }
    },
    "configUrl": "https://mcp.so/server/vigilant-adventure/chuckmen?tab=content"
  },
  {
    "name": "mcp-server-on-raspi MCP server@daikw",
    "url": "https://mcp.so/server/mcp-server-on-raspi/daikw",
    "extractedAt": "2025-06-20T20:58:36.176Z",
    "slug": "mcp-server-on-raspi",
    "authorFromUrl": "daikw",
    "config": {
      "mcpServers": {
        "server": {
          "command": "npx",
          "args": [
            "@modelcontextprotocol/inspector"
          ]
        }
      }
    },
    "configUrl": "https://mcp.so/server/mcp-server-on-raspi/daikw?tab=content"
  },
  {
    "name": "MCP Server@xinyi-houServer implementation for MCP",
    "url": "https://mcp.so/server/MCP-server/xinyi-hou",
    "extractedAt": "2025-06-20T20:58:35.157Z",
    "slug": "MCP-server",
    "authorFromUrl": "xinyi-hou",
    "config": {
      "mcpServers": {
        "myserver": {
          "command": "npm",
          "args": [
            "start"
          ]
        }
      }
    },
    "configUrl": "https://mcp.so/server/MCP-server/xinyi-hou?tab=content"
  },
  {
    "name": "🚀 MCP File System API@Vijayk-213MCP implementation code that sets up the server, integrates the LLaMA model for summarization, and serves it via a Flask application.",
    "url": "https://mcp.so/server/Model-Context-Protocol/Vijayk-213",
    "extractedAt": "2025-06-20T20:58:36.698Z",
    "slug": "Model-Context-Protocol",
    "authorFromUrl": "Vijayk-213",
    "config": {
      "mcpServers": {
        "server": {
          "command": "uvx",
          "args": [
            "voice-mode"
          ]
        }
      }
    },
    "configUrl": "https://mcp.so/server/Model-Context-Protocol/Vijayk-213?tab=content"
  }
]